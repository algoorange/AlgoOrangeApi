from pymongo import MongoClient
from datetime import datetime
from bson import ObjectId

# Connect to MongoDB
client = MongoClient("mongodb://localhost:27017/")
db = client["project_management"]

# Define collections
collections = {
    "projects": db["projects"],
    "departments": db["departments"],
    "budget_allocations": db["budget_allocations"],
    "tasks": db["tasks"],
    "stakeholders": db["stakeholders"],
    "risks": db["risks"],
    "issue_tracking": db["issue_tracking"],
    "lost_projects": db["lost_projects"],
    "reports": db["reports"],
    "users": db["users"],
    "portfolios": db["portfolios"],  # New collection
    "programs": db["programs"],  # New collection
}

# Clear existing data (Optional)
for col in collections.values():
    col.delete_many({})

# Sample Users (District Collector, Engineers, Project Managers)
sample_users = [
    {
        "_id": ObjectId(),
        "name": "District Collector",
        "email": "collector@erode.gov",
        "role": "Collector",
    },
    {
        "_id": ObjectId(),
        "name": "Public Works Manager",
        "email": "pwm@erode.gov",
        "role": "Project Manager",
    },
    {
        "_id": ObjectId(),
        "name": "Civil Engineer",
        "email": "ce@erode.gov",
        "role": "Engineer",
    },
    {
        "_id": ObjectId(),
        "name": "Risk Analyst",
        "email": "risk@erode.gov",
        "role": "Risk Manager",
    },
    {
        "_id": ObjectId(),
        "name": "Environmental Specialist",
        "email": "env@erode.gov",
        "role": "Specialist",
    },
    {
        "_id": ObjectId(),
        "name": "Finance Officer",
        "email": "finance@erode.gov",
        "role": "Finance Manager",
    },
    {
        "_id": ObjectId(),
        "name": "IT Support",
        "email": "it@erode.gov",
        "role": "IT Support",
    },
]
collections["users"].insert_many(sample_users)

# Sample Departments
sample_departments = [
    {
        "_id": ObjectId(),
        "name": "Public Works",
        "head_officer_id": sample_users[1]["_id"],
        "contact_details": "1234567890",
    },
    {
        "_id": ObjectId(),
        "name": "Health & Safety",
        "head_officer_id": sample_users[2]["_id"],
        "contact_details": "0987654321",
    },
    {
        "_id": ObjectId(),
        "name": "Environmental Affairs",
        "head_officer_id": sample_users[4]["_id"],
        "contact_details": "1112223333",
    },
    {
        "_id": ObjectId(),
        "name": "Finance",
        "head_officer_id": sample_users[5]["_id"],
        "contact_details": "4445556666",
    },
]
collections["departments"].insert_many(sample_departments)

# Sample Programs
sample_programs = [
    {
        "_id": ObjectId(),
        "name": "Infrastructure Development Program",
        "description": "Program focused on developing infrastructure in the district",
        "manager_id": sample_users[1]["_id"],
        "start_date": datetime(2023, 1, 1),
        "end_date": datetime(2025, 12, 31),
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "name": "Health and Education Improvement Program",
        "description": "Program aimed at improving health and education facilities",
        "manager_id": sample_users[2]["_id"],
        "start_date": datetime(2024, 1, 1),
        "end_date": datetime(2026, 12, 31),
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
]
collections["programs"].insert_many(sample_programs)

# Sample Portfolios
sample_portfolios = [
    {
        "_id": ObjectId(),
        "name": "Water and Sanitation Portfolio",
        "description": "Portfolio managing water and sanitation projects",
        "program_id": sample_programs[0]["_id"],
        "manager_id": sample_users[0]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "name": "Education Infrastructure Portfolio",
        "description": "Portfolio focused on educational infrastructure development",
        "program_id": sample_programs[1]["_id"],
        "manager_id": sample_users[4]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
]
collections["portfolios"].insert_many(sample_portfolios)

# Sample Projects with program_id
sample_projects = [
    {
        "_id": ObjectId(),
        "name": "Erode Smart City Water Supply",
        "description": "Upgrade water supply infrastructure in Erode",
        "department_id": sample_departments[0]["_id"],
        "portfolio_id": sample_portfolios[0]["_id"],  # Link to portfolio
        "program_id": sample_programs[0]["_id"],  # Link to program
        "funding_source": "State Government",
        "total_budget": 50000000,
        "status": "In Progress",
        "start_date": datetime(2025, 1, 1),
        "end_date": datetime(2026, 12, 31),
        "created_by": sample_users[0]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "name": "District Hospital Expansion",
        "description": "Expansion of district hospital with new facilities",
        "department_id": sample_departments[1]["_id"],
        "portfolio_id": sample_portfolios[1]["_id"],  # Link to portfolio
        "program_id": sample_programs[1]["_id"],  # Link to program
        "funding_source": "Central Government",
        "total_budget": 75000000,
        "status": "Planned",
        "start_date": datetime(2025, 6, 1),
        "end_date": datetime(2027, 5, 30),
        "created_by": sample_users[1]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "name": "Rural Electrification",
        "description": "Provide electricity to rural areas",
        "department_id": sample_departments[0]["_id"],
        "portfolio_id": sample_portfolios[0]["_id"],  # Link to portfolio
        "program_id": sample_programs[0]["_id"],  # Link to program
        "funding_source": "Central Government",
        "total_budget": 30000000,
        "status": "Completed",
        "start_date": datetime(2023, 1, 1),
        "end_date": datetime(2024, 12, 31),
        "created_by": sample_users[0]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "name": "School Infrastructure Upgrade",
        "description": "Upgrade school buildings and facilities",
        "department_id": sample_departments[2]["_id"],
        "portfolio_id": sample_portfolios[1]["_id"],  # Link to portfolio
        "program_id": sample_programs[1]["_id"],  # Link to program
        "funding_source": "State Government",
        "total_budget": 20000000,
        "status": "In Progress",
        "start_date": datetime(2024, 3, 1),
        "end_date": datetime(2025, 2, 28),
        "created_by": sample_users[4]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "name": "Waste Management System",
        "description": "Implement modern waste management solutions",
        "department_id": sample_departments[2]["_id"],
        "portfolio_id": sample_portfolios[0]["_id"],  # Link to portfolio
        "program_id": sample_programs[0]["_id"],  # Link to program
        "funding_source": "Local Government",
        "total_budget": 15000000,
        "status": "Planned",
        "start_date": datetime(2025, 7, 1),
        "end_date": datetime(2026, 6, 30),
        "created_by": sample_users[4]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "name": "Road Infrastructure Development",
        "description": "Repair and upgrade district roads",
        "department_id": sample_departments[0]["_id"],
        "portfolio_id": sample_portfolios[0]["_id"],  # Link to portfolio
        "program_id": sample_programs[0]["_id"],  # Link to program
        "funding_source": "State Government",
        "total_budget": 40000000,
        "status": "In Progress",
        "start_date": datetime(2024, 5, 1),
        "end_date": datetime(2025, 4, 30),
        "created_by": sample_users[1]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "name": "Community Health Center",
        "description": "Establish new community health centers",
        "department_id": sample_departments[1]["_id"],
        "portfolio_id": sample_portfolios[1]["_id"],  # Link to portfolio
        "program_id": sample_programs[1]["_id"],  # Link to program
        "funding_source": "Central Government",
        "total_budget": 25000000,
        "status": "Completed",
        "start_date": datetime(2023, 6, 1),
        "end_date": datetime(2024, 5, 31),
        "created_by": sample_users[2]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "name": "Agricultural Support Program",
        "description": "Provide support and resources to local farmers",
        "department_id": sample_departments[2]["_id"],
        "portfolio_id": sample_portfolios[1]["_id"],  # Link to portfolio
        "program_id": sample_programs[1]["_id"],  # Link to program
        "funding_source": "State Government",
        "total_budget": 10000000,
        "status": "In Progress",
        "start_date": datetime(2024, 8, 1),
        "end_date": datetime(2025, 7, 31),
        "created_by": sample_users[4]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "name": "Tourism Development",
        "description": "Promote local tourism and develop infrastructure",
        "department_id": sample_departments[3]["_id"],
        "portfolio_id": sample_portfolios[0]["_id"],  # Link to portfolio
        "program_id": sample_programs[0]["_id"],  # Link to program
        "funding_source": "Local Government",
        "total_budget": 12000000,
        "status": "Planned",
        "start_date": datetime(2025, 9, 1),
        "end_date": datetime(2026, 8, 31),
        "created_by": sample_users[5]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "name": "Digital Literacy Program",
        "description": "Improve digital literacy among residents",
        "department_id": sample_departments[3]["_id"],
        "portfolio_id": sample_portfolios[1]["_id"],  # Link to portfolio
        "program_id": sample_programs[1]["_id"],  # Link to program
        "funding_source": "Central Government",
        "total_budget": 8000000,
        "status": "In Progress",
        "start_date": datetime(2024, 10, 1),
        "end_date": datetime(2025, 9, 30),
        "created_by": sample_users[6]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
]
collections["projects"].insert_many(sample_projects)

# Sample Budget Allocations
sample_budgets = [
    {
        "_id": ObjectId(),
        "project_id": sample_projects[0]["_id"],
        "allocated_budget": 50000000,
        "spent_budget": 10000000,
        "remaining_budget": 40000000,
        "approval_status": "Approved",
        "approved_by": sample_users[0]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[1]["_id"],
        "allocated_budget": 75000000,
        "spent_budget": 0,
        "remaining_budget": 75000000,
        "approval_status": "Pending",
        "approved_by": sample_users[5]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[2]["_id"],
        "allocated_budget": 30000000,
        "spent_budget": 25000000,
        "remaining_budget": 5000000,
        "approval_status": "Approved",
        "approved_by": sample_users[0]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[3]["_id"],
        "allocated_budget": 20000000,
        "spent_budget": 10000000,
        "remaining_budget": 10000000,
        "approval_status": "Pending",
        "approved_by": sample_users[5]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[4]["_id"],
        "allocated_budget": 15000000,
        "spent_budget": 0,
        "remaining_budget": 15000000,
        "approval_status": "Approved",
        "approved_by": sample_users[4]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[5]["_id"],
        "allocated_budget": 40000000,
        "spent_budget": 20000000,
        "remaining_budget": 20000000,
        "approval_status": "Approved",
        "approved_by": sample_users[1]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[6]["_id"],
        "allocated_budget": 25000000,
        "spent_budget": 25000000,
        "remaining_budget": 0,
        "approval_status": "Approved",
        "approved_by": sample_users[2]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[7]["_id"],
        "allocated_budget": 10000000,
        "spent_budget": 5000000,
        "remaining_budget": 5000000,
        "approval_status": "Approved",
        "approved_by": sample_users[4]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[8]["_id"],
        "allocated_budget": 12000000,
        "spent_budget": 0,
        "remaining_budget": 12000000,
        "approval_status": "Pending",
        "approved_by": sample_users[5]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[9]["_id"],
        "allocated_budget": 8000000,
        "spent_budget": 4000000,
        "remaining_budget": 4000000,
        "approval_status": "Approved",
        "approved_by": sample_users[6]["_id"],
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
]
collections["budget_allocations"].insert_many(sample_budgets)

# Sample Tasks
sample_tasks = [
    {
        "_id": ObjectId(),
        "entity_id": sample_projects[0]["_id"],
        "assigned_to": sample_users[2]["_id"],
        "name": "Digging for pipeline",
        "priority": "High",
        "status": "In Progress",
        "due_date": datetime(2025, 5, 1),
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
        "entity_type": "project",
    },
    {
        "_id": ObjectId(),
        "entity_id": sample_projects[2]["_id"],
        "assigned_to": sample_users[6]["_id"],
        "name": "Install electrical wiring",
        "priority": "High",
        "status": "Completed",
        "due_date": datetime(2024, 3, 15),
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
        "entity_type": "project",
    },
    {
        "_id": ObjectId(),
        "entity_id": sample_projects[4]["_id"],
        "assigned_to": sample_users[2]["_id"],
        "name": "Paint classrooms",
        "priority": "Medium",
        "status": "In Progress",
        "due_date": datetime(2024, 9, 1),
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
        "entity_type": "project",
    },
    {
        "_id": ObjectId(),
        "entity_id": sample_projects[5]["_id"],
        "assigned_to": sample_users[4]["_id"],
        "name": "Set up waste collection points",
        "priority": "High",
        "status": "Planned",
        "due_date": datetime(2025, 8, 1),
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
        "entity_type": "project",
    },
    {
        "_id": ObjectId(),
        "entity_id": sample_projects[3]["_id"],
        "assigned_to": sample_users[1]["_id"],
        "name": "Repair potholes",
        "priority": "Medium",
        "status": "In Progress",
        "due_date": datetime(2025, 2, 1),
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
        "entity_type": "project",
    },
    {
        "_id": ObjectId(),
        "entity_id": sample_projects[6]["_id"],
        "assigned_to": sample_users[2]["_id"],
        "name": "Construct building framework",
        "priority": "High",
        "status": "Completed",
        "due_date": datetime(2024, 2, 1),
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
        "entity_type": "project",
    },
    {
        "_id": ObjectId(),
        "entity_id": sample_projects[8]["_id"],
        "assigned_to": sample_users[4]["_id"],
        "name": "Conduct farmer training sessions",
        "priority": "Medium",
        "status": "In Progress",
        "due_date": datetime(2025, 1, 1),
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
        "entity_type": "project",
    },
    {
        "_id": ObjectId(),
        "entity_id": sample_projects[7]["_id"],
        "assigned_to": sample_users[5]["_id"],
        "name": "Develop tourism brochures",
        "priority": "Low",
        "status": "Planned",
        "due_date": datetime(2025, 10, 1),
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
        "entity_type": "project",
    },
    {
        "_id": ObjectId(),
        "entity_id": sample_projects[9]["_id"],
        "assigned_to": sample_users[6]["_id"],
        "name": "Organize digital literacy workshops",
        "priority": "High",
        "status": "In Progress",
        "due_date": datetime(2025, 5, 1),
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
        "entity_type": "project",
    },
]
collections["tasks"].insert_many(sample_tasks)

# Sample Stakeholders
sample_stakeholders = [
    {
        "_id": ObjectId(),
        "project_id": sample_projects[0]["_id"],
        "name": "Local Water Board",
        "organization": "Erode Municipality",
        "role": "Regulator",
        "impact_level": "High",
        "contact_info": "waterboard@erode.gov",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[2]["_id"],
        "name": "Local Electricity Board",
        "organization": "Erode Electricity Department",
        "role": "Supplier",
        "impact_level": "Medium",
        "contact_info": "electricity@erode.gov",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[3]["_id"],
        "name": "Parent-Teacher Association",
        "organization": "Erode Schools",
        "role": "Beneficiary",
        "impact_level": "High",
        "contact_info": "pta@erode.gov",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[4]["_id"],
        "name": "Environmental NGO",
        "organization": "Green Erode",
        "role": "Advisor",
        "impact_level": "Medium",
        "contact_info": "green@erode.gov",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[5]["_id"],
        "name": "Road Safety Council",
        "organization": "Erode Transport Department",
        "role": "Regulator",
        "impact_level": "High",
        "contact_info": "roadsafety@erode.gov",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[6]["_id"],
        "name": "Health Department",
        "organization": "Erode Health Services",
        "role": "Beneficiary",
        "impact_level": "High",
        "contact_info": "health@erode.gov",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[7]["_id"],
        "name": "Agricultural Cooperative",
        "organization": "Erode Farmers Association",
        "role": "Beneficiary",
        "impact_level": "High",
        "contact_info": "farmers@erode.gov",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[8]["_id"],
        "name": "Tourism Board",
        "organization": "Erode Tourism Department",
        "role": "Advisor",
        "impact_level": "Medium",
        "contact_info": "tourism@erode.gov",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[9]["_id"],
        "name": "Educational Institute",
        "organization": "Erode University",
        "role": "Partner",
        "impact_level": "High",
        "contact_info": "university@erode.gov",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
]
collections["stakeholders"].insert_many(sample_stakeholders)

# Sample Risks
sample_risks = [
    {
        "_id": ObjectId(),
        "project_id": sample_projects[0]["_id"],
        "risk_description": "Possible water contamination during installation",
        "risk_type": "Environmental",
        "impact": "High",
        "probability": "Medium",
        "mitigation_plan": "Regular water quality checks",
        "owner": sample_users[3]["_id"],
        "status": "Open",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[2]["_id"],
        "risk_description": "Delay in electrical equipment delivery",
        "risk_type": "Logistical",
        "impact": "Medium",
        "probability": "High",
        "mitigation_plan": "Maintain buffer stock",
        "owner": sample_users[6]["_id"],
        "status": "Open",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[3]["_id"],
        "risk_description": "Potential labor strike",
        "risk_type": "Operational",
        "impact": "High",
        "probability": "Low",
        "mitigation_plan": "Negotiate with labor unions",
        "owner": sample_users[3]["_id"],
        "status": "Open",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[4]["_id"],
        "risk_description": "Community resistance to waste management changes",
        "risk_type": "Social",
        "impact": "Medium",
        "probability": "Medium",
        "mitigation_plan": "Community engagement and education",
        "owner": sample_users[4]["_id"],
        "status": "Open",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[5]["_id"],
        "risk_description": "Weather-related delays",
        "risk_type": "Environmental",
        "impact": "Medium",
        "probability": "High",
        "mitigation_plan": "Adjust work schedule based on weather forecasts",
        "owner": sample_users[1]["_id"],
        "status": "Open",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[6]["_id"],
        "risk_description": "Shortage of medical supplies",
        "risk_type": "Logistical",
        "impact": "High",
        "probability": "Low",
        "mitigation_plan": "Establish reliable supply chains",
        "owner": sample_users[2]["_id"],
        "status": "Open",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[7]["_id"],
        "risk_description": "Insufficient farmer participation",
        "risk_type": "Social",
        "impact": "High",
        "probability": "Medium",
        "mitigation_plan": "Incentivize participation",
        "owner": sample_users[4]["_id"],
        "status": "Open",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[8]["_id"],
        "risk_description": "Low tourist interest",
        "risk_type": "Market",
        "impact": "Medium",
        "probability": "Medium",
        "mitigation_plan": "Intensive marketing campaigns",
        "owner": sample_users[5]["_id"],
        "status": "Open",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[9]["_id"],
        "risk_description": "Technological barriers for participants",
        "risk_type": "Technical",
        "impact": "High",
        "probability": "Low",
        "mitigation_plan": "Provide technical support and training",
        "owner": sample_users[6]["_id"],
        "status": "Open",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
]
collections["risks"].insert_many(sample_risks)

# Sample Issues
sample_issues = [
    {
        "_id": ObjectId(),
        "project_id": sample_projects[0]["_id"],
        "reported_by": sample_users[2]["_id"],
        "description": "Delay in material delivery due to supplier issues",
        "status": "Open",
        "assigned_to": sample_users[1]["_id"],
        "resolution_notes": "",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[2]["_id"],
        "reported_by": sample_users[6]["_id"],
        "description": "Faulty electrical equipment received",
        "status": "Open",
        "assigned_to": sample_users[1]["_id"],
        "resolution_notes": "",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[3]["_id"],
        "reported_by": sample_users[2]["_id"],
        "description": "Delay in construction due to weather",
        "status": "Open",
        "assigned_to": sample_users[4]["_id"],
        "resolution_notes": "",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[5]["_id"],
        "reported_by": sample_users[1]["_id"],
        "description": "Road repair materials not meeting quality standards",
        "status": "Open",
        "assigned_to": sample_users[2]["_id"],
        "resolution_notes": "",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[6]["_id"],
        "reported_by": sample_users[2]["_id"],
        "description": "Shortage of medical staff",
        "status": "Open",
        "assigned_to": sample_users[5]["_id"],
        "resolution_notes": "",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[7]["_id"],
        "reported_by": sample_users[4]["_id"],
        "description": "Farmers facing difficulties in adopting new practices",
        "status": "Open",
        "assigned_to": sample_users[3]["_id"],
        "resolution_notes": "",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[8]["_id"],
        "reported_by": sample_users[5]["_id"],
        "description": "Tourism infrastructure not ready on time",
        "status": "Open",
        "assigned_to": sample_users[1]["_id"],
        "resolution_notes": "",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[9]["_id"],
        "reported_by": sample_users[6]["_id"],
        "description": "Low participation in digital literacy workshops",
        "status": "Open",
        "assigned_to": sample_users[4]["_id"],
        "resolution_notes": "",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
]
collections["issue_tracking"].insert_many(sample_issues)

# Sample Lost Projects
sample_lost_projects = [
    {
        "_id": ObjectId(),
        "project_id": sample_projects[1]["_id"],
        "reason_for_loss": "Insufficient funds due to budget cuts",
        "recovery_plan": "Seek alternative funding sources",
        "assigned_recovery_officer": sample_users[1]["_id"],
        "status": "Pending Review",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "project_id": sample_projects[4]["_id"],
        "reason_for_loss": "Change in government policy",
        "recovery_plan": "Re-evaluate project scope",
        "assigned_recovery_officer": sample_users[5]["_id"],
        "status": "Pending Review",
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
]
collections["lost_projects"].insert_many(sample_lost_projects)

# Sample Reports
sample_reports = [
    {
        "_id": ObjectId(),
        "generated_by": sample_users[0]["_id"],
        "report_type": "Monthly Progress Report",
        "data_snapshot": {
            "project_name": "Erode Smart City Water Supply",
            "status": "In Progress",
            "tasks_completed": 5,
            "tasks_pending": 10,
        },
        "generated_date": datetime.utcnow(),
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
    {
        "_id": ObjectId(),
        "generated_by": sample_users[4]["_id"],
        "report_type": "Quarterly Financial Report",
        "data_snapshot": {
            "project_name": "Rural Electrification",
            "status": "Completed",
            "budget_spent": 25000000,
            "budget_remaining": 5000000,
        },
        "generated_date": datetime.utcnow(),
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow(),
    },
]
collections["reports"].insert_many(sample_reports)

# Print confirmation
print("Fully updated realistic data inserted successfully!")

# Close MongoDB connection
client.close()
